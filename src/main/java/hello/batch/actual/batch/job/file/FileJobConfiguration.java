package hello.batch.actual.batch.job.file;import javax.persistence.EntityManagerFactory;import org.springframework.batch.core.Job;import org.springframework.batch.core.Step;import org.springframework.batch.core.configuration.annotation.JobBuilderFactory;import org.springframework.batch.core.configuration.annotation.StepBuilderFactory;import org.springframework.batch.core.configuration.annotation.StepScope;import org.springframework.batch.core.launch.support.RunIdIncrementer;import org.springframework.batch.item.ItemProcessor;import org.springframework.batch.item.ItemReader;import org.springframework.batch.item.ItemWriter;import org.springframework.batch.item.database.builder.JpaItemWriterBuilder;import org.springframework.batch.item.file.FlatFileItemReader;import org.springframework.batch.item.file.builder.FlatFileItemReaderBuilder;import org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;import org.springframework.core.io.ClassPathResource;import hello.batch.actual.batch.chunk.processor.FileItemProcessor;import hello.batch.actual.batch.domain.Product;import hello.batch.actual.batch.domain.ProductVO;import lombok.RequiredArgsConstructor;@RequiredArgsConstructor@Configurationpublic class FileJobConfiguration {	public static final int CHUNK_SIZE = 5;	private final JobBuilderFactory jobBuilderFactory;	private final StepBuilderFactory stepBuilderFactory;	private final EntityManagerFactory emf;	@Bean	public Job fileJob() {		return jobBuilderFactory.get("fileJob")			.incrementer(new RunIdIncrementer())			.start(fileStep())			.build();	}	@Bean	public Step fileStep() {		return stepBuilderFactory.get("fileStep")			.<ProductVO, Product>chunk(CHUNK_SIZE)			.reader(fileItemReader(null))			.processor(fileItemProcessor())			.writer(fileItemWriter())			.build();	}	@Bean	@StepScope	public FlatFileItemReader<ProductVO> fileItemReader(@Value("#{jobParameters['requestDate']}")String requestDate) {		return new FlatFileItemReaderBuilder<ProductVO>().name("fileItemReader")			.targetType(ProductVO.class)			.fieldSetMapper(new BeanWrapperFieldSetMapper<>())			.linesToSkip(1)			.resource(new ClassPathResource("product_" + requestDate + ".csv"))			.delimited().delimiter(",")			.names("id", "name", "price", "type")			.build();	}	@Bean	public ItemProcessor fileItemProcessor() {		return new FileItemProcessor();	}	@Bean	public ItemWriter fileItemWriter() {		return new JpaItemWriterBuilder<Product>()			.entityManagerFactory(emf)			.build();	}}