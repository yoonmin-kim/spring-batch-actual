package hello.batch.actual.batch.partition;import java.util.HashMap;import java.util.Map;import javax.sql.DataSource;import org.springframework.batch.core.partition.support.Partitioner;import org.springframework.batch.item.ExecutionContext;import hello.batch.actual.batch.domain.ProductVO;import hello.batch.actual.batch.job.api.QueryGenerator;import lombok.AllArgsConstructor;@AllArgsConstructorpublic class ProductPartitioner implements Partitioner {	private DataSource dataSource;	@Override	public Map<String, ExecutionContext> partition(int gridSize) {		ProductVO[] productVOS = QueryGenerator.getProductArray(dataSource);		Map<String, ExecutionContext> result = new HashMap<>();		int number = 0;		for (int i = 0; i < productVOS.length; i++) {			ExecutionContext executionContext = new ExecutionContext();			executionContext.put("product", productVOS[i]);			result.put("partition" + number, executionContext);			number++;		}		return result;	}}